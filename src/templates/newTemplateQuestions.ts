const inquirer = require('inquirer')

const questions = [
  {
    type: 'input',
    name: 'nsDir',
    message: 'What would you like for your ns directory?',
    default: '~/ns',
  },
  {
    type: 'input',
    name: 'original',
    message: 'Please enter the full path to a directory of a sample code base' +
      ' to serve as a model for your template',
    // default: '~/projects/myApp',
  },
  {
    type: 'input',
    name: 'templateName',
    message: 'What would you like to name your template?  We recommend `ns-template-<description>`',
    default: 'ns-template-first',
  },
  {
    type: 'input',
    name: 'category',
    message: 'what keywords would describe the *type* of file generated by the template? ' +
      'Mention any framework or other category that would help to classify the template.',
    // default: 'ns-template-first',
  },
  {
    type: 'input',
    name: 'customDir',
    message: 'What would you like for your `custom` directory, where code bases can store custom files?',
    default: 'src/custom',
  },
  {
    type: 'input',
    name: 'fileFilter',
    message: 'What would you like for your intial glob file filter, to describe the files that your users' +
      'will be able to modify?  You can have more than one pattern like this: \'+(*.{js,jsx,md}|.eslintrc)\'',
    default: '*.{ts,tsx,md}',
  },
]

export async function newTemplateQuestions() {
  let response: any = {}

  // eslint-disable-next-line no-console
  console.log('Please answer the following questions:')
  try {
    await inquirer
    .prompt(questions)
    .then((answers: any) => {
      response = answers
    })
  } catch (error) {
    throw new Error(`problem asking question: ${error}`)
  }
  return response
}
